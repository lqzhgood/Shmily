import{_ as s,c as i,o as a,R as n}from"./chunks/framework.xvtSDt2M.js";const g=JSON.parse('{"title":"自定义","description":"","frontmatter":{},"headers":[],"relativePath":"guide/use/msg/custom.md","filePath":"guide/use/msg/custom.md","lastUpdated":1721059341000}'),t={name:"guide/use/msg/custom.md"},l=n(`<h1 id="自定义" tabindex="-1">自定义 <a class="header-anchor" href="#自定义" aria-label="Permalink to &quot;自定义&quot;">​</a></h1><ul><li><p>Q: 如果我想新增 <code>Msg</code> 类型，如 <code>钉钉</code> 怎么办?</p></li><li><p>A: 按以下步骤即可</p><h3 id="简单模式" tabindex="-1">简单模式 <a class="header-anchor" href="#简单模式" aria-label="Permalink to &quot;简单模式&quot;">​</a></h3><p>适用于和 <code>短信</code> 一样的简单数据，html 就够了，不需要用到复杂组件，只需要提供 html 即可</p><blockquote><p>此方式不利于数据统计</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 通用字段都是必填 参考 [标准]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;source&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SMS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你好，钉钉&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 用于搜索</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;b&gt;你好，钉钉&lt;/b&gt;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 用于显示</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p><a href="https://github.com/lqzhgood/Shmily-Show/" target="_blank" rel="noreferrer">Shmily-Show</a> 不用添加组件，可直接使用</p><h3 id="组件模式-推荐" tabindex="-1">组件模式（推荐） <a class="header-anchor" href="#组件模式-推荐" aria-label="Permalink to &quot;组件模式（推荐）&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 通用字段都是必填 参考 [标准]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;source&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DingTalk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    $DingTalk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;os&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:    </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Android&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;raw&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 数据的原始样貌</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解密过程中有帮助的值或备注</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;res&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 和 raw  key一一对应, value 为解密后的数据   如未加密则  raw =res</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 前端组件显示所需要的数据</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;rootPath&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ///  /data/ $rootPath /img/123.png 资源文件夹名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    $Dev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 开发中需要用到的数据，Show 生成数据时会被删除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol><li>在 <a href="./schema.html">标准</a> 格式之外，将数据放入 <code>$source</code>，</li><li>在 <a href="https://github.com/lqzhgood/Shmily-Show/" target="_blank" rel="noreferrer">Shmily-Show</a> 项目 <a href="https://github.com/lqzhgood/Shmily-Show/tree/main/memoryweb/src/components/Msg/source" target="_blank" rel="noreferrer">memoryweb/src/components/Msg/source</a> 下新增前端组件用于显示数据 <ul><li>如果您对前端不熟悉，可以在 issue 中提出并提供样本 Msg 我来代劳~</li></ul></li></ol></li></ul><hr>`,3),h=[l];function e(p,k,o,r,d,E){return a(),i("div",null,h)}const u=s(t,[["render",e]]);export{g as __pageData,u as default};
